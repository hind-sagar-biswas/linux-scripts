#!/usr/bin/env bash

# Check if a project name is provided
if [ -z "$1" ]; then
  echo "Usage: $0 <project-name>"
  exit 1
fi

PROJECT_NAME=$1

# Generate a Maven quickstart project
mvn archetype:generate \
  -DgroupId=com.hindbiswas.$PROJECT_NAME \
  -DartifactId=$PROJECT_NAME \
  -DarchetypeArtifactId=maven-archetype-quickstart \
  -DarchetypeVersion=1.4 \
  -DinteractiveMode=false

if [ $? -eq 0 ]; then
  echo "Maven project '$PROJECT_NAME' created successfully."

  SCRIPT_DIR=$(dirname "$0")

  RESOURCE_POM="$SCRIPT_DIR/resources/pom.xml"
  RESOURCE_GITIGNORE="$SCRIPT_DIR/resources/java.gitignore"

  TARGET_POM="$PROJECT_NAME/pom.xml"
  TARGET_GITIGNORE="$PROJECT_NAME/.gitignore"

  # Copy the pom.xml from the resources folder
  if [ -f "$RESOURCE_POM" ]; then
    cp "$RESOURCE_POM" "$TARGET_POM"
    echo "Copied custom pom.xml to project directory."
    # Replace instances of '$P' with the project name in the copied pom.xml
    sed -i "s/\$P/$PROJECT_NAME/g" "$TARGET_POM"
    echo "Updated placeholders in pom.xml with project name '$PROJECT_NAME'."
  else
    echo "No pom.xml found in resources folder. Skipping copy."
  fi

  # Copy the .gitignore from the resources folder
  if [ -f "$RESOURCE_GITIGNORE" ]; then
    cp "$RESOURCE_GITIGNORE" "$TARGET_GITIGNORE"
    echo "Copied custom .gitignore to project directory."
  else
    echo "No .gitignore found in resources folder. Skipping copy."
  fi

  # Navigate into the project directory
  cd "$PROJECT_NAME"

  # Initialize a Git repository with base branch = main
  git init
  git checkout -b main
  git add .
  git commit -m "Initial commit with Maven project setup"

  echo "Initialized Git repository and made initial commit."


  mvn clean test

  # Ask if the user wants to open the project in Neovim
  read -p "Do you want to open the project in Neovim? (y/n): " open_in_nvim

  if [ "$open_in_nvim" == "y" ]; then
    nvim
  fi
else
  echo "Failed to create Maven project."
fi

